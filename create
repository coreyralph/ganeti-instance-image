#!/bin/bash

# Copyright (C) 2007, 2008, 2009 Google Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

set -e

. common.sh

DPKG_ARCH=${ARCH:-`dpkg --print-architecture`}

# If the target device is not a real block device we'll first losetup it.
# This is needed for file disks.
if [ ! -b $blockdev ]; then
  ORIGINAL_BLOCKDEV=$blockdev
  blockdev=$($LOSETUP -sf $blockdev)
  CLEANUP+=("$LOSETUP -d $blockdev")
fi

if [ "$PARTITION_STYLE" = "none" ]; then
  filesystem_dev=$blockdev
elif [ "$PARTITION_STYLE" = "msdos" ]; then
  # Create one big partition, and make it bootable
  format_disk0 $blockdev
  filesystem_dev=$(map_disk0 $blockdev)
  CLEANUP+=("unmap_disk0 $blockdev")
else
  echo "Unknown partition style $PARTITION_STYLE"
  exit 1
fi

mke2fs -Fjq $filesystem_dev
root_uuid=$($VOL_ID $filesystem_dev )

if [ -n "$swapdev" ]; then
  mkswap $swapdev
  swap_uuid=$($VOL_ID $swapdev || true )
fi

TMPDIR=`mktemp -d` || exit 1
CLEANUP+=("rmdir $TMPDIR")

mount $filesystem_dev $TMPDIR
CLEANUP+=("umount $TMPDIR")

cp -p /etc/hosts $TMPDIR/etc/hosts
cp -p /etc/resolv.conf $TMPDIR/etc/resolv.conf
echo $instance > $TMPDIR/etc/hostname
echo $instance > $TMPDIR/etc/mailname

cat > $TMPDIR/etc/fstab <<EOF
# /etc/fstab: static file system information.
#
# <file system>   <mount point>   <type>  <options>       <dump>  <pass>
UUID=$root_uuid   /               ext3    defaults        0       1
proc              /proc           proc    defaults        0       0
EOF

[ -n "$swapdev" -a -n "$swap_uuid" ] && cat >> $TMPDIR/etc/fstab <<EOF
UUID=$swap_uuid   swap            swap    defaults        0       0
EOF

cat > $TMPDIR/etc/network/interfaces <<EOF
auto lo
iface lo inet loopback
EOF

if [ -e $TMPDIR/etc/inittab ]; then
  cat $TMPDIR/etc/inittab | sed -re 's/\stty1$/ console/' \
    > $TMPDIR/etc/inittab.new
  mv $TMPDIR/etc/inittab.new $TMPDIR/etc/inittab
elif [ -e $TMPDIR/etc/event.d/tty1 ]; then
  cat $TMPDIR/etc/event.d/tty1 | sed -re 's/tty1/console/' \
    > $TMPDIR/etc/event.d/console
  rm $TMPDIR/etc/event.d/tty1
fi

RUN_PARTS=`which run-parts`

if [ -n "$RUN_PARTS" -a -n "$CUSTOMIZE_DIR" -a -d "$CUSTOMIZE_DIR" ]; then
  TARGET=$TMPDIR
  BLOCKDEV=$blockdev
  FSYSDEV=$filesystem_dev
  export TARGET SUITE ARCH PARTITION_STYLE EXTRA_PKGS BLOCKDEV FSYSDEV
  $RUN_PARTS $CUSTOMIZE_DIR
fi

# execute cleanups
cleanup
trap - EXIT

exit 0
