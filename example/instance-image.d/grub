#!/bin/bash
# This is an example script that configures, grub after installation. This
# script assumes that grub has been installed onto the image already and a
# working grub.conf exists. To use, make it executable and edit your settings
# to the following:
#
# GRUB_SETUP="yes"

set -e

. common.sh

CLEANUP=( )

trap cleanup EXIT

if [ -z "${TARGET}" -o -d "${TARGET}" ] ; then
    echo "Missing target directory"
    exit 1
fi

# Set disk based on type of hypervisor
disk=""
if [ "${HYPERVISOR}" = "kvm" ] ; then
  disk="vda"
else
  disk="xda"
fi

# make /dev/$disk
mknod ${TARGET}/dev/${disk} b $(stat -L -c "0x%t 0x%T" $BLOCKDEV)
CLEANUP+=("rm -f ${TARGET}/dev/$disk")

# make /dev/${disk}1
mknod ${TARGET}/dev/${disk}1 b $(stat -L -c "0x%t 0x%T" $BOOT_DEV)
CLEANUP+=("rm -f ${TARGET}/dev/${disk}1")

# make /dev/${disk}1
mknod ${TARGET}/dev/${disk}3 b $(stat -L -c "0x%t 0x%T" $ROOT_DEV)
CLEANUP+=("rm -f ${TARGET}/dev/${disk}3")

# create device.map
cat > "${TARGET}/boot/grub/device.map" <<EOF
(hd0) /dev/${disk}
EOF

# install grub to the block device
chroot ${TARGET} grub --batch --no-floppy --device-map=/boot/grub/device.map <<EOF
root (hd0,0)
setup (hd0)
quit
EOF

# execute cleanups
cleanup
trap - EXIT

exit 0
