#!/bin/bash

# Copyright (C) 2010 Oregon State University
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.
#
# This is an example script that configures, grub after installation. This
# script assumes that grub has been installed onto the image already and a
# working grub.conf exists. This is only enabled if using the tarball image
# type. 

set -e

. common.sh

if [ "${IMAGE_DEBUG} " = 1 ] ; then
    set -x
fi

CLEANUP=( )

trap cleanup EXIT

if [ "${IMAGE_TYPE}" != "tarball" ] ; then
    echo "Image type not \'tarball\', skipping setting up grub..."
    exit 0
fi

if [ -z "${TARGET}" -o -d "${TARGET}" ] ; then
    echo "Missing target directory"
    exit 1
fi

# Set disk based on type of hypervisor
disk=""
if [ "${HYPERVISOR}" = "kvm" ] ; then
  disk="vda"
else
  disk="xda"
fi

# make /dev/$disk
mknod ${TARGET}/dev/${disk} b $(stat -L -c "0x%t 0x%T" $BLOCKDEV)
CLEANUP+=("rm -f ${TARGET}/dev/$disk")

# make /dev/${disk}1
mknod ${TARGET}/dev/${disk}1 b $(stat -L -c "0x%t 0x%T" $BOOT_DEV)
CLEANUP+=("rm -f ${TARGET}/dev/${disk}1")

# make /dev/${disk}1
mknod ${TARGET}/dev/${disk}3 b $(stat -L -c "0x%t 0x%T" $ROOT_DEV)
CLEANUP+=("rm -f ${TARGET}/dev/${disk}3")

# create device.map
cat > "${TARGET}/boot/grub/device.map" <<EOF
(hd0) /dev/${disk}
EOF

# install grub to the block device
chroot ${TARGET} grub --batch --no-floppy --device-map=/boot/grub/device.map <<EOF
root (hd0,0)
setup (hd0)
quit
EOF

# execute cleanups
cleanup
trap - EXIT

exit 0
